{"code":"import { None } from '../component';\r\nimport * as PIXI from 'pixi.js';\r\nexport default class Entity {\r\n    constructor(components) {\r\n        this.components = new Map();\r\n        this.sprite = new PIXI.Container();\r\n        this.id = Symbol();\r\n        if (components) {\r\n            this.add(...components);\r\n        }\r\n    }\r\n    component(Ent) {\r\n        const component = Array\r\n            .from(this.components.values())\r\n            .find((component) => component instanceof Ent);\r\n        if (!component) {\r\n            return new None();\r\n        }\r\n        return component;\r\n    }\r\n    /**\r\n     *\r\n     * @example\r\n     * add(component)\r\n     * add(component, component)\r\n     * add([component, component])\r\n     */\r\n    add(...components) {\r\n        components.flat().forEach(component => this.components.set(component.id, component));\r\n        return this;\r\n    }\r\n    /**\r\n     *\r\n     * @example\r\n     * has(component)\r\n     * has(component, component)\r\n     * has([component, component])\r\n     */\r\n    has(...composition) {\r\n        return composition\r\n            .flat()\r\n            .every((Type) => Array\r\n            .from(this.components.values())\r\n            .some(component => component instanceof Type));\r\n    }\r\n    /**\r\n     *\r\n     * @example\r\n     * remove(component)\r\n     * remove(component, component)\r\n     * remove([component, component])\r\n     */\r\n    remove(...components) {\r\n        components.flat().forEach(component => {\r\n            if (typeof component === 'function') {\r\n                return Array\r\n                    .from(this.components.values())\r\n                    .filter(c => c instanceof component)\r\n                    .forEach(({ id }) => {\r\n                    this.components.delete(id);\r\n                });\r\n            }\r\n            if (component.id) {\r\n                return this.components.delete(component.id);\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=entity.js.map","references":["/Users/taugocauci/Workspace/personal/game/src/component/index.ts","/Users/taugocauci/Workspace/personal/game/node_modules/@types/pixi.js/index.d.ts"],"map":"{\"version\":3,\"file\":\"entity.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/entity/entity.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAkB,EAAE,IAAI,EAAE,MAAM,cAAc,CAAA;AAC9C,OAAO,KAAK,IAAI,MAAM,SAAS,CAAA;AAI/B,MAAM,CAAC,OAAO,OAAO,MAAM;IAMzB,YAAY,UAAwB;QAHpC,eAAU,GAA2B,IAAI,GAAG,EAAE,CAAC;QAC/C,WAAM,GAAmB,IAAI,IAAI,CAAC,SAAS,EAAE,CAAA;QAG3C,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE,CAAA;QAClB,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,CAAA;SACxB;IACH,CAAC;IAED,SAAS,CAAsB,GAA4B;QACzD,MAAM,SAAS,GAAG,KAAK;aACpB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;aAC9B,IAAI,CAAC,CAAC,SAAS,EAAkB,EAAE,CAClC,SAAS,YAAY,GAAG,CACzB,CAAA;QACH,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,IAAI,IAAI,EAAE,CAAA;SAClB;QACD,OAAO,SAAS,CAAA;IAClB,CAAC;IAED;;;;;;OAMG;IACH,GAAG,CAAC,GAAG,UAA0C;QAC/C,UAAU,CAAC,IAAI,EAAE,CAAC,OAAO,CACvB,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,CAC1D,CAAA;QACD,OAAO,IAAI,CAAA;IACb,CAAC;IAED;;;;;;OAMG;IACH,GAAG,CAAC,GAAG,WAAiE;QACtE,OAAO,WAAW;aACf,IAAI,EAAE;aACN,KAAK,CAAC,CAAC,IAAI,EAAgC,EAAE,CAAC,KAAK;aACjD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;aAC9B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,YAAY,IAAI,CAAC,CAC9C,CAAA;IACL,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,GAAG,UAET;QACC,UAAU,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YACpC,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE;gBACnC,OAAO,KAAK;qBACT,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;qBAC9B,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY,SAAS,CAAC;qBACnC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;oBAClB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;gBAC5B,CAAC,CAAC,CAAA;aACL;YAED,IAAI,SAAS,CAAC,EAAE,EAAE;gBAChB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;aAC5C;QACH,CAAC,CAAC,CAAA;IACJ,CAAC;CACF\"}"}
